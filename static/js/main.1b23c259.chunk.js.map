{"version":3,"sources":["Components/currency-row.jsx","App.js","index.js"],"names":["CurrencyRow","props","currencyOption","selectedCurrency","onChangeCurrency","onChangeAmount","amount","type","className","value","onChange","map","option","key","BASE_URL","App","toAmount","fromAmount","useState","setCurrencyOption","fromCurrency","setFromCurrrency","toCurrency","setToCurrrency","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","useEffect","fetch","then","res","json","data","console","log","firstCurrency","Object","keys","rates","base","e","target","ReactDOM","render","document","getElementById"],"mappings":"6MA0BeA,EAxBK,SAAUC,GAAQ,IAE1BC,EAIOD,EAJPC,eACJC,EAGWF,EAHXE,iBACAC,EAEWH,EAFXG,iBACAC,EACWJ,EADXI,eACAC,EAAWL,EAAXK,OAEJ,OACI,6BACI,2BAAOC,KAAK,SACRC,UAAU,QACVC,MAAOH,EACPI,SAAUL,IACd,4BAAQI,MAAON,EACXO,SAAUN,GACTF,EAAeS,KAAI,SAAAC,GAAM,OACtB,4BAAQC,IAAKD,EAAQH,MAAOG,GAASA,SCfnDE,G,MAAW,0CAyEFC,MAvEf,WAAgB,IASVC,EAAUC,EATD,EAE+BC,mBAAS,IAFxC,mBAENhB,EAFM,KAEUiB,EAFV,OAG4BD,qBAH5B,mBAGNE,EAHM,KAGQC,EAHR,OAIwBH,qBAJxB,mBAINI,EAJM,KAIMC,EAJN,OAK2BL,qBAL3B,mBAKNM,EALM,KAKQC,EALR,OAMeP,mBAAS,GANxB,mBAMNZ,EANM,KAMEoB,EANF,OAO2CR,oBAAS,GAPpD,mBAONS,EAPM,KAOgBC,EAPhB,KAiDb,OAtCID,GACFV,EAAaX,EACbU,EAAWV,EAASkB,IAEpBR,EAAWV,EACXW,EAAaX,EAASkB,GAGxBK,qBAAU,WACRC,MAAMhB,GACHiB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,GACZ,IAAMG,EAAgBC,OAAOC,KAAKL,EAAKM,OAAO,GAC9CrB,EAAkB,CAACe,EAAKO,MAAP,mBAAgBH,OAAOC,KAAKL,EAAKM,UAClDnB,EAAiBa,EAAKO,MACtBlB,EAAec,GACfZ,EAAgBS,EAAKM,MAAMH,SAE9B,IAEHR,qBAAU,WACW,MAAhBT,GAAsC,MAAdE,GAC1BQ,MAAM,GAAD,OAAIhB,EAAJ,iBAAqBM,EAArB,oBAA6CE,IAClDS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIT,EAAgBS,EAAKM,MAAMlB,SACxC,CAACF,EAAcE,IAahB,oCACE,uCACA,kBAAC,EAAD,CACEpB,eAAgBA,EAChBC,iBAAkBiB,EAClBhB,iBAAkB,SAAAsC,GAAC,OAAIrB,EAAiBqB,EAAEC,OAAOlC,QACjDJ,eAjByB,SAACqC,GAC9BhB,EAAUgB,EAAEC,OAAOlC,OACnBmB,GAAwB,IAgBpBtB,OAAQW,IAEV,yBAAKT,UAAU,UAAf,KACA,kBAAC,EAAD,CACEN,eAAgBA,EAChBC,iBAAkBmB,EAClBlB,iBAAkB,SAAAsC,GAAC,OAAInB,EAAemB,EAAEC,OAAOlC,QAC/CJ,eApBuB,SAACqC,GAC5BhB,EAAUgB,EAAEC,OAAOlC,OACnBmB,GAAwB,IAmBpBtB,OAAQU,MCnEhB4B,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,U","file":"static/js/main.1b23c259.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst CurrencyRow = function (props) {\r\n\r\n    const { currencyOption,\r\n        selectedCurrency,\r\n        onChangeCurrency,\r\n        onChangeAmount,\r\n        amount } = props\r\n\r\n    return (\r\n        <div>\r\n            <input type='number'\r\n                className='input'\r\n                value={amount}\r\n                onChange={onChangeAmount} />\r\n            <select value={selectedCurrency}\r\n                onChange={onChangeCurrency}>\r\n                {currencyOption.map(option => (\r\n                    <option key={option} value={option}>{option}</option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CurrencyRow;","import React, { useEffect, useState } from 'react';\nimport CurrencyRow from './Components/currency-row';\nimport './App.css';\n\nconst BASE_URL = \"https://api.exchangeratesapi.io/latest\";\n\nfunction App() {\n\n  const [currencyOption, setCurrencyOption] = useState([]);\n  const [fromCurrency, setFromCurrrency] = useState();\n  const [toCurrency, setToCurrrency] = useState();\n  const [exchangeRate, setExchangeRate] = useState();\n  const [amount, setAmount] = useState(1);\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true);\n\n  let toAmount, fromAmount;\n\n  if (amountInFromCurrency) {\n    fromAmount = amount;\n    toAmount = amount * exchangeRate;\n  } else {\n    toAmount = amount;\n    fromAmount = amount / exchangeRate;\n  }\n\n  useEffect(() => {\n    fetch(BASE_URL)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data)\n        const firstCurrency = Object.keys(data.rates)[0];\n        setCurrencyOption([data.base, ...Object.keys(data.rates)])\n        setFromCurrrency(data.base)\n        setToCurrrency(firstCurrency)\n        setExchangeRate(data.rates[firstCurrency]);\n      })\n  }, [])\n\n  useEffect(() => {\n    if(fromCurrency != null && toCurrency != null) \n    {fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n    .then(res => res.json())\n    .then(data => setExchangeRate(data.rates[toCurrency]))}\n  }, [fromCurrency, toCurrency])\n\n  const handleFromAmountChange = (e) => {\n    setAmount(e.target.value)\n    setAmountInFromCurrency(true)\n  }\n\n  const handleToAmountChange = (e) => {\n    setAmount(e.target.value)\n    setAmountInFromCurrency(false)\n  }\n\n  return (\n    <>\n      <h1>Convert</h1>\n      <CurrencyRow\n        currencyOption={currencyOption}\n        selectedCurrency={fromCurrency}\n        onChangeCurrency={e => setFromCurrrency(e.target.value)}\n        onChangeAmount={handleFromAmountChange}\n        amount={fromAmount}\n      />\n      <div className='equals'>=</div>\n      <CurrencyRow\n        currencyOption={currencyOption}\n        selectedCurrency={toCurrency}\n        onChangeCurrency={e => setToCurrrency(e.target.value)}\n        onChangeAmount={handleToAmountChange}\n        amount={toAmount}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}